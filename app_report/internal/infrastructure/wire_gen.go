// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package infrastructure

import (
	"github.com/google/wire"
	"github.com/leaf-rain/raindata/app_report/internal/infrastructure/config"
	"github.com/leaf-rain/raindata/app_report/internal/infrastructure/repository"
	"github.com/leaf-rain/raindata/app_report/pkg/logger"
	"github.com/leaf-rain/raindata/common/go_sql_driver"
)

// Injectors from wire.go:

func Initialize() (*Infrastructure, error) {
	cmdArgs := config.NewCmdArgs()
	configConfig, err := config.InitConfig(cmdArgs)
	if err != nil {
		return nil, err
	}
	logConfig := config.GetLogCfgByConfig(configConfig)
	zapLogger, err := logger.InitLogger(logConfig)
	if err != nil {
		return nil, err
	}
	infrastructure := NewInfrastructure(zapLogger)
	return infrastructure, nil
}

// wire.go:

var WireInfrastructureSet = wire.NewSet(config.NewCmdArgs, config.InitConfig, config.GetLogCfgByConfig, config.GetSqlCfgByConfig, go_sql_driver.NewSql, logger.InitLogger, repository.NewCkWriter, NewInfrastructure)
