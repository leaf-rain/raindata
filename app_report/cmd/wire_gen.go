// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/leaf-rain/raindata/app_report/internal/adapter"
	"github.com/leaf-rain/raindata/app_report/internal/application"
	"github.com/leaf-rain/raindata/app_report/internal/domain"
	"github.com/leaf-rain/raindata/app_report/internal/infrastructure/config"
	"github.com/leaf-rain/raindata/app_report/pkg/logger"
)

import (
	_ "embed"
	_ "net/http/pprof"
)

// Injectors from wire.go:

func Initialize() (*adapter.Adapter, error) {
	cmdArgs := config.NewCmdArgs()
	configConfig, err := config.InitConfig(cmdArgs)
	if err != nil {
		return nil, err
	}
	logConfig := config.GetLogCfgByConfig(configConfig)
	zapLogger := logger.InitLogger(logConfig)
	eventManager := domain.NewEventManager(zapLogger)
	ckWriter := domain.NewCkWriter(zapLogger)
	appStream := application.NewAppStream(zapLogger, configConfig, eventManager, ckWriter)
	grpcServer := adapter.NewGrpcServer(configConfig, zapLogger, appStream)
	adapterAdapter := adapter.NewAdapter(grpcServer)
	return adapterAdapter, nil
}
