// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.20.3
// source: conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bootstrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server *Server `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Data   *Data   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Log    *Log    `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
	Jwt    *JWT    `protobuf:"bytes,4,opt,name=jwt,proto3" json:"jwt,omitempty"`
	Email  *Email  `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Oss    *Oss    `protobuf:"bytes,8,opt,name=oss,proto3" json:"oss,omitempty"`
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *Bootstrap) GetJwt() *JWT {
	if x != nil {
		return x.Jwt
	}
	return nil
}

func (x *Bootstrap) GetEmail() *Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *Bootstrap) GetOss() *Oss {
	if x != nil {
		return x.Oss
	}
	return nil
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName        string `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Appid             string `protobuf:"bytes,2,opt,name=appid,proto3" json:"appid,omitempty"`
	LogLevel          string `protobuf:"bytes,3,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	LogFormat         string `protobuf:"bytes,4,opt,name=log_format,json=logFormat,proto3" json:"log_format,omitempty"`
	LogFile           bool   `protobuf:"varint,5,opt,name=log_file,json=logFile,proto3" json:"log_file,omitempty"`
	LogPath           string `protobuf:"bytes,6,opt,name=log_path,json=logPath,proto3" json:"log_path,omitempty"`
	LogFileMaxSize    int64  `protobuf:"varint,7,opt,name=log_file_max_size,json=logFileMaxSize,proto3" json:"log_file_max_size,omitempty"`
	LogFileMaxBackups int64  `protobuf:"varint,8,opt,name=log_file_max_backups,json=logFileMaxBackups,proto3" json:"log_file_max_backups,omitempty"`
	LogMaxAge         int64  `protobuf:"varint,9,opt,name=log_max_age,json=logMaxAge,proto3" json:"log_max_age,omitempty"`
	LogCompress       bool   `protobuf:"varint,10,opt,name=log_compress,json=logCompress,proto3" json:"log_compress,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Log) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *Log) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *Log) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *Log) GetLogFormat() string {
	if x != nil {
		return x.LogFormat
	}
	return ""
}

func (x *Log) GetLogFile() bool {
	if x != nil {
		return x.LogFile
	}
	return false
}

func (x *Log) GetLogPath() string {
	if x != nil {
		return x.LogPath
	}
	return ""
}

func (x *Log) GetLogFileMaxSize() int64 {
	if x != nil {
		return x.LogFileMaxSize
	}
	return 0
}

func (x *Log) GetLogFileMaxBackups() int64 {
	if x != nil {
		return x.LogFileMaxBackups
	}
	return 0
}

func (x *Log) GetLogMaxAge() int64 {
	if x != nil {
		return x.LogMaxAge
	}
	return 0
}

func (x *Log) GetLogCompress() bool {
	if x != nil {
		return x.LogCompress
	}
	return false
}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Http *Server_HTTP `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Grpc *Server_GRPC `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database *Data_Database `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Redis    *Data_Redis    `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	Mongo    *Mongo         `protobuf:"bytes,3,opt,name=mongo,proto3" json:"mongo,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Data) GetDatabase() *Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Data) GetMongo() *Mongo {
	if x != nil {
		return x.Mongo
	}
	return nil
}

type JWT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SigningKey    string `protobuf:"bytes,1,opt,name=signingKey,proto3" json:"signingKey,omitempty"`
	ExpiresTime   string `protobuf:"bytes,2,opt,name=expiresTime,proto3" json:"expiresTime,omitempty"`
	BufferTime    string `protobuf:"bytes,3,opt,name=bufferTime,proto3" json:"bufferTime,omitempty"`
	Issuer        string `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
	UseMultipoint bool   `protobuf:"varint,5,opt,name=UseMultipoint,proto3" json:"UseMultipoint,omitempty"`
}

func (x *JWT) Reset() {
	*x = JWT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWT) ProtoMessage() {}

func (x *JWT) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWT.ProtoReflect.Descriptor instead.
func (*JWT) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *JWT) GetSigningKey() string {
	if x != nil {
		return x.SigningKey
	}
	return ""
}

func (x *JWT) GetExpiresTime() string {
	if x != nil {
		return x.ExpiresTime
	}
	return ""
}

func (x *JWT) GetBufferTime() string {
	if x != nil {
		return x.BufferTime
	}
	return ""
}

func (x *JWT) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *JWT) GetUseMultipoint() bool {
	if x != nil {
		return x.UseMultipoint
	}
	return false
}

type AutoCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Web    string `protobuf:"bytes,1,opt,name=web,proto3" json:"web,omitempty"`
	Root   string `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	Server string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	Module string `protobuf:"bytes,4,opt,name=module,proto3" json:"module,omitempty"`
	AiPath string `protobuf:"bytes,5,opt,name=aiPath,proto3" json:"aiPath,omitempty"`
}

func (x *AutoCode) Reset() {
	*x = AutoCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoCode) ProtoMessage() {}

func (x *AutoCode) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoCode.ProtoReflect.Descriptor instead.
func (*AutoCode) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *AutoCode) GetWeb() string {
	if x != nil {
		return x.Web
	}
	return ""
}

func (x *AutoCode) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

func (x *AutoCode) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *AutoCode) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *AutoCode) GetAiPath() string {
	if x != nil {
		return x.AiPath
	}
	return ""
}

type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To       string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From     string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Host     string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Secret   string `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	Nickname string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Port     int64  `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	IsSSL    bool   `protobuf:"varint,7,opt,name=isSSL,proto3" json:"isSSL,omitempty"`
}

func (x *Email) Reset() {
	*x = Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *Email) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Email) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Email) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Email) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Email) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Email) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Email) GetIsSSL() bool {
	if x != nil {
		return x.IsSSL
	}
	return false
}

type Mongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coll             string       `protobuf:"bytes,1,opt,name=coll,proto3" json:"coll,omitempty"`
	Options          string       `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	Database         string       `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	Username         string       `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password         string       `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	AuthSource       string       `protobuf:"bytes,6,opt,name=authSource,proto3" json:"authSource,omitempty"`
	MinPoolSize      int64        `protobuf:"varint,7,opt,name=minPoolSize,proto3" json:"minPoolSize,omitempty"`
	MaxPoolSize      int64        `protobuf:"varint,8,opt,name=maxPoolSize,proto3" json:"maxPoolSize,omitempty"`
	SocketTimeoutMs  int64        `protobuf:"varint,9,opt,name=socketTimeoutMs,proto3" json:"socketTimeoutMs,omitempty"`
	ConnectTimeoutMs int64        `protobuf:"varint,10,opt,name=connectTimeoutMs,proto3" json:"connectTimeoutMs,omitempty"`
	IsZap            bool         `protobuf:"varint,11,opt,name=isZap,proto3" json:"isZap,omitempty"`
	Hosts            []*MongoHost `protobuf:"bytes,12,rep,name=hosts,proto3" json:"hosts,omitempty"`
}

func (x *Mongo) Reset() {
	*x = Mongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mongo) ProtoMessage() {}

func (x *Mongo) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mongo.ProtoReflect.Descriptor instead.
func (*Mongo) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *Mongo) GetColl() string {
	if x != nil {
		return x.Coll
	}
	return ""
}

func (x *Mongo) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *Mongo) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *Mongo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Mongo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Mongo) GetAuthSource() string {
	if x != nil {
		return x.AuthSource
	}
	return ""
}

func (x *Mongo) GetMinPoolSize() int64 {
	if x != nil {
		return x.MinPoolSize
	}
	return 0
}

func (x *Mongo) GetMaxPoolSize() int64 {
	if x != nil {
		return x.MaxPoolSize
	}
	return 0
}

func (x *Mongo) GetSocketTimeoutMs() int64 {
	if x != nil {
		return x.SocketTimeoutMs
	}
	return 0
}

func (x *Mongo) GetConnectTimeoutMs() int64 {
	if x != nil {
		return x.ConnectTimeoutMs
	}
	return 0
}

func (x *Mongo) GetIsZap() bool {
	if x != nil {
		return x.IsZap
	}
	return false
}

func (x *Mongo) GetHosts() []*MongoHost {
	if x != nil {
		return x.Hosts
	}
	return nil
}

type MongoHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *MongoHost) Reset() {
	*x = MongoHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MongoHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoHost) ProtoMessage() {}

func (x *MongoHost) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoHost.ProtoReflect.Descriptor instead.
func (*MongoHost) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{8}
}

func (x *MongoHost) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *MongoHost) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type Oss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string           `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Local        *OssLocal        `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
	Qiniu        *OssQiniu        `protobuf:"bytes,3,opt,name=qiniu,proto3" json:"qiniu,omitempty"`
	Aliyun       *OssAliyun       `protobuf:"bytes,4,opt,name=aliyun,proto3" json:"aliyun,omitempty"`
	Huaweiyun    *OssHuaweiyun    `protobuf:"bytes,5,opt,name=huaweiyun,proto3" json:"huaweiyun,omitempty"`
	TencentCOS   *OssTencentCOS   `protobuf:"bytes,6,opt,name=tencentCOS,proto3" json:"tencentCOS,omitempty"`
	AwsS3        *OssAwsS3        `protobuf:"bytes,7,opt,name=awsS3,proto3" json:"awsS3,omitempty"`
	CloudflareR2 *OssCloudflareR2 `protobuf:"bytes,8,opt,name=cloudflareR2,proto3" json:"cloudflareR2,omitempty"`
}

func (x *Oss) Reset() {
	*x = Oss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Oss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oss) ProtoMessage() {}

func (x *Oss) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oss.ProtoReflect.Descriptor instead.
func (*Oss) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{9}
}

func (x *Oss) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Oss) GetLocal() *OssLocal {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *Oss) GetQiniu() *OssQiniu {
	if x != nil {
		return x.Qiniu
	}
	return nil
}

func (x *Oss) GetAliyun() *OssAliyun {
	if x != nil {
		return x.Aliyun
	}
	return nil
}

func (x *Oss) GetHuaweiyun() *OssHuaweiyun {
	if x != nil {
		return x.Huaweiyun
	}
	return nil
}

func (x *Oss) GetTencentCOS() *OssTencentCOS {
	if x != nil {
		return x.TencentCOS
	}
	return nil
}

func (x *Oss) GetAwsS3() *OssAwsS3 {
	if x != nil {
		return x.AwsS3
	}
	return nil
}

func (x *Oss) GetCloudflareR2() *OssCloudflareR2 {
	if x != nil {
		return x.CloudflareR2
	}
	return nil
}

type OssLocal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	StorePath string `protobuf:"bytes,2,opt,name=storePath,proto3" json:"storePath,omitempty"`
}

func (x *OssLocal) Reset() {
	*x = OssLocal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssLocal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssLocal) ProtoMessage() {}

func (x *OssLocal) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssLocal.ProtoReflect.Descriptor instead.
func (*OssLocal) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{10}
}

func (x *OssLocal) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OssLocal) GetStorePath() string {
	if x != nil {
		return x.StorePath
	}
	return ""
}

type OssQiniu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zone          string `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	Bucket        string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ImgPath       string `protobuf:"bytes,3,opt,name=imgPath,proto3" json:"imgPath,omitempty"`
	AccessKey     string `protobuf:"bytes,4,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	SecretKey     string `protobuf:"bytes,5,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	UseHTTPS      bool   `protobuf:"varint,6,opt,name=useHTTPS,proto3" json:"useHTTPS,omitempty"`
	UseCdnDomains bool   `protobuf:"varint,7,opt,name=useCdnDomains,proto3" json:"useCdnDomains,omitempty"`
}

func (x *OssQiniu) Reset() {
	*x = OssQiniu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssQiniu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssQiniu) ProtoMessage() {}

func (x *OssQiniu) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssQiniu.ProtoReflect.Descriptor instead.
func (*OssQiniu) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{11}
}

func (x *OssQiniu) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *OssQiniu) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *OssQiniu) GetImgPath() string {
	if x != nil {
		return x.ImgPath
	}
	return ""
}

func (x *OssQiniu) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *OssQiniu) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *OssQiniu) GetUseHTTPS() bool {
	if x != nil {
		return x.UseHTTPS
	}
	return false
}

func (x *OssQiniu) GetUseCdnDomains() bool {
	if x != nil {
		return x.UseCdnDomains
	}
	return false
}

type OssAliyun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint        string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKeyId     string `protobuf:"bytes,2,opt,name=accessKeyId,proto3" json:"accessKeyId,omitempty"`
	AccessKeySecret string `protobuf:"bytes,3,opt,name=accessKeySecret,proto3" json:"accessKeySecret,omitempty"`
	BucketName      string `protobuf:"bytes,4,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	BucketUrl       string `protobuf:"bytes,5,opt,name=bucketUrl,proto3" json:"bucketUrl,omitempty"`
	BasePath        string `protobuf:"bytes,6,opt,name=basePath,proto3" json:"basePath,omitempty"`
}

func (x *OssAliyun) Reset() {
	*x = OssAliyun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssAliyun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssAliyun) ProtoMessage() {}

func (x *OssAliyun) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssAliyun.ProtoReflect.Descriptor instead.
func (*OssAliyun) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{12}
}

func (x *OssAliyun) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *OssAliyun) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *OssAliyun) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *OssAliyun) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *OssAliyun) GetBucketUrl() string {
	if x != nil {
		return x.BucketUrl
	}
	return ""
}

func (x *OssAliyun) GetBasePath() string {
	if x != nil {
		return x.BasePath
	}
	return ""
}

type OssHuaweiyun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path      string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Bucket    string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Endpoint  string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKey string `protobuf:"bytes,4,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	SecretKey string `protobuf:"bytes,5,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
}

func (x *OssHuaweiyun) Reset() {
	*x = OssHuaweiyun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssHuaweiyun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssHuaweiyun) ProtoMessage() {}

func (x *OssHuaweiyun) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssHuaweiyun.ProtoReflect.Descriptor instead.
func (*OssHuaweiyun) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{13}
}

func (x *OssHuaweiyun) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OssHuaweiyun) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *OssHuaweiyun) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *OssHuaweiyun) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *OssHuaweiyun) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type OssTencentCOS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket     string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Region     string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	SecretID   string `protobuf:"bytes,3,opt,name=secretID,proto3" json:"secretID,omitempty"`
	SecretKey  string `protobuf:"bytes,4,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	BaseURL    string `protobuf:"bytes,5,opt,name=baseURL,proto3" json:"baseURL,omitempty"`
	PathPrefix string `protobuf:"bytes,6,opt,name=pathPrefix,proto3" json:"pathPrefix,omitempty"`
}

func (x *OssTencentCOS) Reset() {
	*x = OssTencentCOS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssTencentCOS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssTencentCOS) ProtoMessage() {}

func (x *OssTencentCOS) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssTencentCOS.ProtoReflect.Descriptor instead.
func (*OssTencentCOS) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{14}
}

func (x *OssTencentCOS) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *OssTencentCOS) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *OssTencentCOS) GetSecretID() string {
	if x != nil {
		return x.SecretID
	}
	return ""
}

func (x *OssTencentCOS) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *OssTencentCOS) GetBaseURL() string {
	if x != nil {
		return x.BaseURL
	}
	return ""
}

func (x *OssTencentCOS) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

type OssAwsS3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket           string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Region           string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Endpoint         string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	SecretID         string `protobuf:"bytes,4,opt,name=secretID,proto3" json:"secretID,omitempty"`
	SecretKey        string `protobuf:"bytes,5,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	BaseURL          string `protobuf:"bytes,6,opt,name=baseURL,proto3" json:"baseURL,omitempty"`
	PathPrefix       string `protobuf:"bytes,7,opt,name=pathPrefix,proto3" json:"pathPrefix,omitempty"`
	S3ForcePathStyle bool   `protobuf:"varint,8,opt,name=s3ForcePathStyle,proto3" json:"s3ForcePathStyle,omitempty"`
	DisableSSL       bool   `protobuf:"varint,9,opt,name=disableSSL,proto3" json:"disableSSL,omitempty"`
}

func (x *OssAwsS3) Reset() {
	*x = OssAwsS3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssAwsS3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssAwsS3) ProtoMessage() {}

func (x *OssAwsS3) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssAwsS3.ProtoReflect.Descriptor instead.
func (*OssAwsS3) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{15}
}

func (x *OssAwsS3) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *OssAwsS3) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *OssAwsS3) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *OssAwsS3) GetSecretID() string {
	if x != nil {
		return x.SecretID
	}
	return ""
}

func (x *OssAwsS3) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *OssAwsS3) GetBaseURL() string {
	if x != nil {
		return x.BaseURL
	}
	return ""
}

func (x *OssAwsS3) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *OssAwsS3) GetS3ForcePathStyle() bool {
	if x != nil {
		return x.S3ForcePathStyle
	}
	return false
}

func (x *OssAwsS3) GetDisableSSL() bool {
	if x != nil {
		return x.DisableSSL
	}
	return false
}

type OssCloudflareR2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket          string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	BaseURL         string `protobuf:"bytes,2,opt,name=baseURL,proto3" json:"baseURL,omitempty"`
	Path            string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	AccountID       string `protobuf:"bytes,4,opt,name=accountID,proto3" json:"accountID,omitempty"`
	AccessKeyID     string `protobuf:"bytes,5,opt,name=accessKeyID,proto3" json:"accessKeyID,omitempty"`
	SecretAccessKey string `protobuf:"bytes,6,opt,name=secretAccessKey,proto3" json:"secretAccessKey,omitempty"`
}

func (x *OssCloudflareR2) Reset() {
	*x = OssCloudflareR2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssCloudflareR2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssCloudflareR2) ProtoMessage() {}

func (x *OssCloudflareR2) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssCloudflareR2.ProtoReflect.Descriptor instead.
func (*OssCloudflareR2) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{16}
}

func (x *OssCloudflareR2) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *OssCloudflareR2) GetBaseURL() string {
	if x != nil {
		return x.BaseURL
	}
	return ""
}

func (x *OssCloudflareR2) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OssCloudflareR2) GetAccountID() string {
	if x != nil {
		return x.AccountID
	}
	return ""
}

func (x *OssCloudflareR2) GetAccessKeyID() string {
	if x != nil {
		return x.AccessKeyID
	}
	return ""
}

func (x *OssCloudflareR2) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

type Server_HTTP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string               `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr    string               `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Server_GRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string               `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr    string               `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Data_Database struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverName   string `protobuf:"bytes,1,opt,name=driverName,proto3" json:"driverName,omitempty"`
	DbSource     string `protobuf:"bytes,2,opt,name=dbSource,proto3" json:"dbSource,omitempty"`
	MaxOpenConns int64  `protobuf:"varint,3,opt,name=maxOpenConns,proto3" json:"maxOpenConns,omitempty"`
	MaxIdleConns int64  `protobuf:"varint,4,opt,name=maxIdleConns,proto3" json:"maxIdleConns,omitempty"`
	IdleTimeOut  int64  `protobuf:"varint,5,opt,name=idleTimeOut,proto3" json:"idleTimeOut,omitempty"`
	Debug        bool   `protobuf:"varint,6,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Data_Database) GetDriverName() string {
	if x != nil {
		return x.DriverName
	}
	return ""
}

func (x *Data_Database) GetDbSource() string {
	if x != nil {
		return x.DbSource
	}
	return ""
}

func (x *Data_Database) GetMaxOpenConns() int64 {
	if x != nil {
		return x.MaxOpenConns
	}
	return 0
}

func (x *Data_Database) GetMaxIdleConns() int64 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *Data_Database) GetIdleTimeOut() int64 {
	if x != nil {
		return x.IdleTimeOut
	}
	return 0
}

func (x *Data_Database) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

type Data_Redis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolSize     int64    `protobuf:"varint,1,opt,name=poolSize,proto3" json:"poolSize,omitempty"`
	Addr         []string `protobuf:"bytes,2,rep,name=addr,proto3" json:"addr,omitempty"`
	Pwd          string   `protobuf:"bytes,3,opt,name=pwd,proto3" json:"pwd,omitempty"`
	DialTimeout  int64    `protobuf:"varint,4,opt,name=dialTimeout,proto3" json:"dialTimeout,omitempty"`
	ReadTimeout  int64    `protobuf:"varint,5,opt,name=readTimeout,proto3" json:"readTimeout,omitempty"`
	WriteTimeout int64    `protobuf:"varint,6,opt,name=writeTimeout,proto3" json:"writeTimeout,omitempty"`
	Db           int64    `protobuf:"varint,7,opt,name=db,proto3" json:"db,omitempty"`
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conf_conf_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Data_Redis) GetPoolSize() int64 {
	if x != nil {
		return x.PoolSize
	}
	return 0
}

func (x *Data_Redis) GetAddr() []string {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *Data_Redis) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *Data_Redis) GetDialTimeout() int64 {
	if x != nil {
		return x.DialTimeout
	}
	return 0
}

func (x *Data_Redis) GetReadTimeout() int64 {
	if x != nil {
		return x.ReadTimeout
	}
	return 0
}

func (x *Data_Redis) GetWriteTimeout() int64 {
	if x != nil {
		return x.WriteTimeout
	}
	return 0
}

func (x *Data_Redis) GetDb() int64 {
	if x != nil {
		return x.Db
	}
	return 0
}

var File_conf_conf_proto protoreflect.FileDescriptor

var file_conf_conf_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x01,
	0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x72,
	0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a,
	0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x72, 0x61,
	0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67,
	0x12, 0x21, 0x0a, 0x03, 0x6a, 0x77, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x57, 0x54, 0x52, 0x03,
	0x6a, 0x77, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x03,
	0x6f, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x73, 0x73, 0x52, 0x03, 0x6f, 0x73, 0x73, 0x22,
	0xcd, 0x02, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x6f, 0x67, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x29, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x6f, 0x67,
	0x46, 0x69, 0x6c, 0x65, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x6c,
	0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x6f, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x4d, 0x61, 0x78, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0b,
	0x6c, 0x6f, 0x67, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x4d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xb8, 0x02, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x68, 0x74,
	0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x48, 0x54, 0x54,
	0x50, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x67, 0x72, 0x70, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x52, 0x50, 0x43, 0x52, 0x04,
	0x67, 0x72, 0x70, 0x63, 0x1a, 0x69, 0x0a, 0x04, 0x48, 0x54, 0x54, 0x50, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a,
	0x69, 0x0a, 0x04, 0x47, 0x52, 0x50, 0x43, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xa1, 0x04, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x65,
	0x64, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x67,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x67,
	0x6f, 0x1a, 0xc6, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x62, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x62, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61,
	0x78, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x4f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x1a, 0xc1, 0x01, 0x0a, 0x05, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x69, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72,
	0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x64, 0x62, 0x22, 0xa5,
	0x01, 0x0a, 0x03, 0x4a, 0x57, 0x54, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x55, 0x73, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x78, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x65, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x77, 0x65, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x69, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x69, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x9d, 0x01, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73,
	0x53, 0x53, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x53, 0x53, 0x4c,
	0x22, 0x86, 0x03, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x4d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x5a, 0x61, 0x70, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x5a, 0x61, 0x70, 0x12, 0x2b, 0x0a, 0x05,
	0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x72,
	0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x09, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x80,
	0x03, 0x0a, 0x03, 0x4f, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x73, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52,
	0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4f, 0x73, 0x73, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x52, 0x05, 0x71, 0x69, 0x6e,
	0x69, 0x75, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x6c, 0x69, 0x79, 0x75, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4f, 0x73, 0x73, 0x41, 0x6c, 0x69, 0x79, 0x75, 0x6e, 0x52, 0x06, 0x61, 0x6c, 0x69, 0x79, 0x75,
	0x6e, 0x12, 0x36, 0x0a, 0x09, 0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x79, 0x75, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4f, 0x73, 0x73, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69, 0x79, 0x75, 0x6e, 0x52, 0x09,
	0x68, 0x75, 0x61, 0x77, 0x65, 0x69, 0x79, 0x75, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x6e, 0x74, 0x43, 0x4f, 0x53, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x73, 0x73, 0x54, 0x65,
	0x6e, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x4f, 0x53, 0x52, 0x0a, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x6e,
	0x74, 0x43, 0x4f, 0x53, 0x12, 0x2a, 0x0a, 0x05, 0x61, 0x77, 0x73, 0x53, 0x33, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4f, 0x73, 0x73, 0x41, 0x77, 0x73, 0x53, 0x33, 0x52, 0x05, 0x61, 0x77, 0x73, 0x53, 0x33,
	0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x32,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4f, 0x73, 0x73, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6c, 0x61, 0x72,
	0x65, 0x52, 0x32, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x6c, 0x61, 0x72, 0x65, 0x52,
	0x32, 0x22, 0x3c, 0x0a, 0x08, 0x4f, 0x73, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22,
	0xce, 0x01, 0x0a, 0x08, 0x4f, 0x73, 0x73, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x12, 0x12, 0x0a, 0x04,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x48, 0x54, 0x54, 0x50, 0x53, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x48, 0x54, 0x54, 0x50, 0x53, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x43, 0x64, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x43, 0x64, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x22, 0xcd, 0x01, 0x0a, 0x09, 0x4f, 0x73, 0x73, 0x41, 0x6c, 0x69, 0x79, 0x75, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x92, 0x01, 0x0a, 0x0c, 0x4f, 0x73, 0x73, 0x48, 0x75, 0x61, 0x77, 0x65, 0x69, 0x79, 0x75,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xb3, 0x01, 0x0a, 0x0d, 0x4f, 0x73, 0x73, 0x54, 0x65, 0x6e,
	0x63, 0x65, 0x6e, 0x74, 0x43, 0x4f, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x96, 0x02, 0x0a, 0x08,
	0x4f, 0x73, 0x73, 0x41, 0x77, 0x73, 0x53, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x33, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x73, 0x33, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x53, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x53, 0x4c, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x4f, 0x73, 0x73, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x66, 0x6c, 0x61, 0x72, 0x65, 0x52, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x61, 0x66, 0x2d, 0x72, 0x61, 0x69, 0x6e,
	0x2f, 0x72, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x62, 0x69,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x3b, 0x63,
	0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_proto_rawDescData = file_conf_conf_proto_rawDesc
)

func file_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_conf_conf_proto_rawDescData)
	})
	return file_conf_conf_proto_rawDescData
}

var file_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_conf_conf_proto_goTypes = []any{
	(*Bootstrap)(nil),           // 0: kratos.api.Bootstrap
	(*Log)(nil),                 // 1: kratos.api.Log
	(*Server)(nil),              // 2: kratos.api.Server
	(*Data)(nil),                // 3: kratos.api.Data
	(*JWT)(nil),                 // 4: kratos.api.JWT
	(*AutoCode)(nil),            // 5: kratos.api.AutoCode
	(*Email)(nil),               // 6: kratos.api.Email
	(*Mongo)(nil),               // 7: kratos.api.Mongo
	(*MongoHost)(nil),           // 8: kratos.api.MongoHost
	(*Oss)(nil),                 // 9: kratos.api.Oss
	(*OssLocal)(nil),            // 10: kratos.api.OssLocal
	(*OssQiniu)(nil),            // 11: kratos.api.OssQiniu
	(*OssAliyun)(nil),           // 12: kratos.api.OssAliyun
	(*OssHuaweiyun)(nil),        // 13: kratos.api.OssHuaweiyun
	(*OssTencentCOS)(nil),       // 14: kratos.api.OssTencentCOS
	(*OssAwsS3)(nil),            // 15: kratos.api.OssAwsS3
	(*OssCloudflareR2)(nil),     // 16: kratos.api.OssCloudflareR2
	(*Server_HTTP)(nil),         // 17: kratos.api.Server.HTTP
	(*Server_GRPC)(nil),         // 18: kratos.api.Server.GRPC
	(*Data_Database)(nil),       // 19: kratos.api.Data.Database
	(*Data_Redis)(nil),          // 20: kratos.api.Data.Redis
	(*durationpb.Duration)(nil), // 21: google.protobuf.Duration
}
var file_conf_conf_proto_depIdxs = []int32{
	2,  // 0: kratos.api.Bootstrap.server:type_name -> kratos.api.Server
	3,  // 1: kratos.api.Bootstrap.data:type_name -> kratos.api.Data
	1,  // 2: kratos.api.Bootstrap.log:type_name -> kratos.api.Log
	4,  // 3: kratos.api.Bootstrap.jwt:type_name -> kratos.api.JWT
	6,  // 4: kratos.api.Bootstrap.email:type_name -> kratos.api.Email
	9,  // 5: kratos.api.Bootstrap.oss:type_name -> kratos.api.Oss
	17, // 6: kratos.api.Server.http:type_name -> kratos.api.Server.HTTP
	18, // 7: kratos.api.Server.grpc:type_name -> kratos.api.Server.GRPC
	19, // 8: kratos.api.Data.database:type_name -> kratos.api.Data.Database
	20, // 9: kratos.api.Data.redis:type_name -> kratos.api.Data.Redis
	7,  // 10: kratos.api.Data.mongo:type_name -> kratos.api.Mongo
	8,  // 11: kratos.api.Mongo.hosts:type_name -> kratos.api.MongoHost
	10, // 12: kratos.api.Oss.local:type_name -> kratos.api.OssLocal
	11, // 13: kratos.api.Oss.qiniu:type_name -> kratos.api.OssQiniu
	12, // 14: kratos.api.Oss.aliyun:type_name -> kratos.api.OssAliyun
	13, // 15: kratos.api.Oss.huaweiyun:type_name -> kratos.api.OssHuaweiyun
	14, // 16: kratos.api.Oss.tencentCOS:type_name -> kratos.api.OssTencentCOS
	15, // 17: kratos.api.Oss.awsS3:type_name -> kratos.api.OssAwsS3
	16, // 18: kratos.api.Oss.cloudflareR2:type_name -> kratos.api.OssCloudflareR2
	21, // 19: kratos.api.Server.HTTP.timeout:type_name -> google.protobuf.Duration
	21, // 20: kratos.api.Server.GRPC.timeout:type_name -> google.protobuf.Duration
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_conf_conf_proto_init() }
func file_conf_conf_proto_init() {
	if File_conf_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_conf_conf_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Bootstrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*JWT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AutoCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Mongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*MongoHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Oss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*OssLocal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*OssQiniu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*OssAliyun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*OssHuaweiyun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*OssTencentCOS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*OssAwsS3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*OssCloudflareR2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Server_HTTP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Server_GRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Data_Database); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conf_conf_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Data_Redis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conf_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_proto_depIdxs,
		MessageInfos:      file_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_proto = out.File
	file_conf_conf_proto_rawDesc = nil
	file_conf_conf_proto_goTypes = nil
	file_conf_conf_proto_depIdxs = nil
}
